from typing import List, Tuple, Optional

class SamplingTree:
    def __init__(self, capacity: int) -> None: ...

    def add(self, value: float) -> int: ...

    def add_multiple(self, values: List[float]) -> List[int]: ...

    def get_smaples(self, sample_size: int) -> Tuple[List[float], List[int]]: ...

    def update(self, values: List[float], indics: List[int]) -> None: ...

    def total(self) -> float: ...

    def max_leaf(self) -> float: ...

    def check_tree(self, err_threshold: float) -> bool: ...

    def max_err(self) -> float: ...

    def check_max_leaf(self) -> bool: ...

    def show(self) -> None: ...
